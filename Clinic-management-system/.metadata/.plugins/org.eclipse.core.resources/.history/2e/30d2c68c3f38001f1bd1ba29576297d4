package com.example.demo.service;

import java.util.List;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.validation.annotation.Validated;

import com.example.demo.entity.Patient;
import com.example.demo.repo.PatientRepository;

@Service
public class DoctorService implements IDoctorService {

	private final Logger logger = LoggerFactory.getLogger(DoctorService.class);

	@Autowired
	PatientRepository doctorRepo;

	@Override
	public List<Patient> getDoctorsFromDatabase() {
		logger.info("Fetching all orders...");
		return doctorRepo.findAll();
	}

	@Override
	public Optional<Patient> getDoctorById(int id) {
		return doctorRepo.findById(id);
	}

	@Override
	public void deleteDoctorById(int id) {
		doctorRepo.deleteById(id);
	}

	@Override
	public Patient createDoctor(@Validated Patient newDoctor) {
		return doctorRepo.save(newDoctor);
	}

	@Override
	public ResponseEntity<Patient> updateDoctor(Integer doctorId, @Validated Patient newDoctor) {
		Optional<Patient> existingDoctor = doctorRepo.findById(doctorId);
		existingDoctor.ifPresent(doctor -> {
			doctor.setDoctorName(newDoctor.getDoctorName());
			doctorRepo.save(doctor);
		});
		return ResponseEntity.of(existingDoctor);
	}
}
